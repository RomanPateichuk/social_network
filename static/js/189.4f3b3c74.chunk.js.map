{"version":3,"file":"static/js/189.4f3b3c74.chunk.js","mappings":"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","sources":["webpack://social_network/./src/components/Dialogs/Dialog.module.css?7071","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialog_dialogs__uyZqU\",\"dialogsItems\":\"Dialog_dialogsItems__Z7CI3\",\"dialog\":\"Dialog_dialog__3g+yV\",\"active\":\"Dialog_active__KMy1H\",\"messages\":\"Dialog_messages__dG+Gz\",\"message\":\"Dialog_message__ZlcIZ\"};","import styles from '../Dialog.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id\r\n  return (\r\n    <div className={styles.dialog + ' ' + styles.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default DialogItem","import styles from '../Dialog.module.css'\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={styles.message}>\r\n      {props.message}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Message","import styles from './Dialog.module.css'\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message'\r\nimport React from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { reduxForm, Field } from 'redux-form'\r\nimport { Textarea } from '../common/FormsControls/FormsControls'\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators'\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n  return <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n      <Field component={Textarea}\r\n        validate={[required, maxLength50]}\r\n        name=\"newMessageBody\"\r\n        placeholder='Enter your message'></Field>\r\n    </div>\r\n    <div>\r\n      <button>Send</button>\r\n    </div>\r\n  </form>\r\n}\r\n\r\nconst AddMessageFromRedux = reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm)\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n  let dialogElementsJSX = props.dialogsPage.dialogs.map(item => <DialogItem key={item.id} name={item.name} id={item.id} />)\r\n  let messagesDataJSX = props.dialogsPage.messages.map(item => <Message key={item.id} message={item.message} />)\r\n  let addNewMesage = (data) => {\r\n    props.sendMessage(data.newMessageBody)\r\n  }\r\n\r\n  if (!props.isAuth) {\r\n    return <Navigate to=\"/login\" />\r\n  }\r\n\r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <div className={styles.dialogsItems}>\r\n        {dialogElementsJSX}\r\n      </div>\r\n      <div className={styles.messages}>\r\n        <div>{messagesDataJSX}</div>\r\n        <AddMessageFromRedux onSubmit={addNewMesage} />\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dialogs","import { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs'\r\n// import StoreContext from '../../StoreContext';\r\nimport { connect } from 'react-redux'\r\n// const DialogsContainer = () => {\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\"\r\nimport { compose } from 'redux';\r\n//   return (\r\n//     <StoreContext.Consumer>{(store) => {\r\n//       let onSendMessageClick = () => {\r\n//         store.dispatch(sendMessageCreator())\r\n//       }\r\n//       let onNewMessageChange = (body) => {\r\n//         store.dispatch(updateNewMessageBodyCreator(body))\r\n//       }\r\n//       return <Dialogs onSendMessageClick={onSendMessageClick} onNewMessageChange={onNewMessageChange} state={store.getState().dialogsPage} />\r\n//     }}\r\n//     </StoreContext.Consumer>\r\n//   );\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody))\r\n    },\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)","import React from \"react\"\r\nimport { Navigate } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Сomponent) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to={\"/login\"} />\r\n      return <Сomponent {...this.props} />\r\n\r\n    }\r\n  }\r\n\r\n  let connectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n\r\n  return connectedAuthRedirectComponent\r\n}"],"names":["props","path","id","_jsx","className","styles","children","NavLink","to","name","message","maxLength50","maxLengthCreator","AddMessageFromRedux","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","dialogElementsJSX","dialogsPage","dialogs","map","item","DialogItem","messagesDataJSX","messages","Message","isAuth","data","sendMessage","newMessageBody","Navigate","compose","connect","state","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","auth","Сomponent","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","_objectSpread","React"],"sourceRoot":""}