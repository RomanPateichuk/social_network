{"version":3,"file":"static/js/849.cdcf4fd3.chunk.js","mappings":"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","sources":["webpack://social_network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social_network/./src/components/Profile/MyPosts/Post/MyPost.module.css?4339","components/Profile/MyPosts/Post/MyPost.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://social_network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/withRouter/withRouter.js","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__QtAaA\",\"posts\":\"MyPosts_posts__jNgzV\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MyPost_item__dJ1K8\"};","import s from './MyPost.module.css'\r\n\r\nconst MyPost = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://klike.net/uploads/posts/2021-08/1629443054_1.jpg\" alt=\"post\" />\r\n      {props.message}\r\n      <div>\r\n        <span>like {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default MyPost;","import s from './MyPosts.module.css'\r\nimport MyPost from './Post/MyPost';\r\nimport React from \"react\"\r\nimport { reduxForm, Field } from 'redux-form'\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n      <Field component={Textarea} name={'newPostText'} validate={[required, maxLength10]} placeholder={'Post message'}></Field>\r\n    </div>\r\n    <div>\r\n      <button>Add post</button>\r\n    </div>\r\n  </form>\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: \"postAddForm\" })(AddNewPostForm)\r\n\r\n\r\nconst MyPosts = (props) => {\r\n  let postsDataJSX = props.posts.map(item => <MyPost key={item.id} message={item.message} likesCount={item.likesCount} />)\r\n\r\n  let onAddPost = (data) => {\r\n    props.addPost(data.newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>\r\n        {postsDataJSX}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default MyPosts;","import MyPosts from './MyPosts';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer'\r\nimport { connect } from 'react-redux'\r\n// import StoreContext from '../../../StoreContext';\r\n// const MyPostsContainer = () => {\r\n//   return (\r\n//     <StoreContext.Consumer>{\r\n//       (store) => {\r\n//         let addPost = () => {\r\n//           store.dispatch(addPostActionCreator())\r\n//         }\r\n//         let onPostChange = (text) => {\r\n//           store.dispatch(updateNewPostTextActionCreator(text))\r\n//         }\r\n//         return <MyPosts updateNewPostText={onPostChange} addPost={addPost} posts={store.getState().profilePage.posts} newPostText={store.getState().profilePage.newPostText} />\r\n//       }\r\n//     }\r\n//     </StoreContext.Consumer>\r\n//   )\r\n\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  }\r\n}\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (post) => {\r\n      dispatch(addPostActionCreator(post))\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__nhWDU\"};","import { React, useState, useEffect } from 'react'\r\n\r\n\r\n\r\nconst ProfiStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status)\r\n  }, [props.status]);\r\n\r\n  const activeEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactiveEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode &&\r\n        <div>\r\n          <span onDoubleClick={activeEditMode}>{status || \"No status...\"}</span>\r\n        </div>\r\n      }\r\n      {editMode &&\r\n        <div>\r\n          <input onChange={onStatusChange} autoFocus onBlur={deactiveEditMode} value={status} />\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\nexport default ProfiStatusWithHooks;","import Preloader from '../../common/Preloader/Preloader';\r\nimport a from './ProfileInfo.module.css'\r\nimport userDefaultPhoto from '../../../assets/images/userPhoto.png'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={a.descriptionBlock}>\r\n        <img src={profile.photos.large ? profile.photos.large : userDefaultPhoto} alt=\"\" />\r\n        <p>id: {profile.userId}</p>\r\n        <p>{profile.fullName}</p>\r\n        <p>About me: {profile.aboutMe ? profile.fullName : <span>no info</span>}</p>\r\n        {\r\n\r\n          Object.keys(profile.contacts).map(element => {\r\n            return <div key={element}>\r\n              <span >{profile.contacts[element] ? element + ':  ' + profile.contacts[element] : <span>{element}: no info</span>}</span>\r\n            </div>\r\n          })\r\n        }\r\n      </div>\r\n      <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div >\r\n  );\r\n}\r\n\r\n\r\nexport default Profile;","import React from 'react'\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux'\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer'\r\nimport { withRouter } from '../common/withRouter/withRouter'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId\r\n    }\r\n    this.props.getUserProfile(userId)\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  render() {\r\n    return <Profile {...this.props}\r\n      profile={this.props.profile}\r\n      status={this.props.status}\r\n      updateStatus={this.props.updateStatus} />\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)","import { useLocation, useNavigate, useParams } from 'react-router-dom';\r\n\r\nexport function withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return (\r\n      <Component\r\n        {...props}\r\n        location={location}\r\n        params={params}\r\n        navigate={navigate}\r\n      />\r\n    );\r\n  }\r\n\r\n  return ComponentWithRouterProp;\r\n}","import React from \"react\"\r\nimport { Navigate } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Сomponent) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to={\"/login\"} />\r\n      return <Сomponent {...this.props} />\r\n\r\n    }\r\n  }\r\n\r\n  let connectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n\r\n  return connectedAuthRedirectComponent\r\n}"],"names":["props","_jsxs","className","s","children","_jsx","src","alt","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","postsDataJSX","posts","map","item","MyPost","id","data","addPost","newPostText","connect","state","profilePage","dispatch","post","addPostActionCreator","MyPosts","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","_ref","profile","a","photos","large","userDefaultPhoto","userId","fullName","aboutMe","Object","keys","contacts","element","ProfileStatusWithHooks","Preloader","ProfileInfo","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","this","params","authorizedUserId","getUserProfile","getStatus","Profile","_objectSpread","React","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","mapStateToPropsForRedirect","Сomponent","RedirectComponent","Navigate","to"],"sourceRoot":""}